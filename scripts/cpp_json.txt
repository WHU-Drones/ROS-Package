{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.

	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"ROS node class": {
		"prefix": "node",
		"body": [
			"#pragma once",
			"",
			"#include \"ros/ros.h\"",
			"//#include \"dynamic_reconfigure/server.h\"",
			"//#include \"${2:PackageName}/${1:$TM_FILENAME_BASE}Config.h\"",
			"",
			"class ${1:$TM_FILENAME_BASE}:public ${3:ParentClass}",
			"{",
			"public:",
			"    ${1:$TM_FILENAME_BASE}(ros::NodeHandle* nh, ros::NodeHandle* ns);",
			"    ~${1:$TM_FILENAME_BASE}();",
			"    void Run();",
			"private:",
			"    ros::NodeHandle _nh;",
			"    ros::NodeHandle _ns;",
			"    ",
			"    //std::string _member_param1_name;",
			"    //int _member_param2_name;",
			"    //float _member_param3_name;",
			"    ",
			"    //dynamic_reconfigure::Server<${2:PackageName}::${1:$TM_FILENAME_BASE}Config> _dynamic_param_server;",
			"    //dynamic_reconfigure::Server<${2:PackageName}::${1:$TM_FILENAME_BASE}Config>::CallbackType _f;",
			"    ",
			"    void PublisherInit();",
			"    void SubscriberInit();",
			"    void ServiceInit();",
			"    void ClientInit();",
			"    void ActionInit();",
			"    void DynamicParamInit();",
			"    //void DynamicParamServer_Callback(${2:PackageName}::${1:$TM_FILENAME_BASE}Config &config, uint32_t level);",
			"}",
			"",
			"${1:$TM_FILENAME_BASE}::${1:$TM_FILENAME_BASE}(ros::NodeHandle* nh, ros::NodeHandle* ns):_nh(*nh), _ns(*ns)",
			"{",
			"    //_ns.param<std::string>(\"member_param1_name\", _member_param1_name, \"(DefaultValue)\");",
			"    //_ns.param<int>(\"member_param2_name\", _member_param2_name, \"(DefaultValue)\");",
			"    //_ns.param<float>(\"member_param3_name\", _member_param3_name, \"(DefaultValue)\");",
			"    ",
			"    PublisherInit();",
			"    SubscriberInit();",
			"    ServiceInit();",
			"    ClientInit();",
			"    ActionInit();",
			"    DynamicParamInit();",
			"}",
			"",
			"${1:$TM_FILENAME_BASE}::~${1:$TM_FILENAME_BASE}()",
			"{",
			"    _nh.~NodeHandle();",
			"    _ns.~NodeHandle();",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::Run()",
			"{",
			"}",
			"",
			"//void ${1:$TM_FILENAME_BASE}::DynamicParamServer_Callback(${2:PackageName}::${1:$TM_FILENAME_BASE}Config &config, uint32_t level)",
			"//{",
			"//}",
			"",
			"void ${1:$TM_FILENAME_BASE}::PublisherInit()",
			"{",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::SubscriberInit()",
			"{",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::ServiceInit()",
			"{",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::ClientInit()",
			"{",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::ActionInit()",
			"{",
			"}",
			"",
			"void ${1:$TM_FILENAME_BASE}::DynamicParamInit()",
			"{",
			"    //_f = boost::bind(&${1:$TM_FILENAME_BASE}::DynamicParamServer_Callback, this, _1, _2);",
			"    //_dynamic_param_server.setCallback(_f);",
			"}",
			"",
			"$0"
		],
		"description": "Create ros node class"
	},

	"ROS publisher": {
		"prefix": "pub",
		"body": [
			"_${1:Name}_publisher = _nh.advertise<${2:DataType}>(_${1:Name}_topic, ${3:5}, true);",
			"$0"
		],
		"description": "Create a ros publisher"
	},

	"ROS subscriber": {
		"prefix": "sub",
		"body": [
			"_${1:Name}_subscriber = _nh.subscribe<${2:DataType}>(_${1:Name}_topic, ${3:5}, &$TM_FILENAME_BASE::${4:CallbackName}_Callback, this);",
			"$0"
		],
		"description": "Create a ros subscriber"
	},

	"ROS subscriber callback": {
		"prefix": "subcall",
		"body": [
			"void $TM_FILENAME_BASE::${1:Name}_Callback(const ${2:DataType}ConstPtr& msg)",
			"{",
			"    $0",
			"}",
			""
		],
		"description": "Create a ros subscriber callback"
	},
}
